{"version":3,"sources":["./src/app/tab2/tab2.page.html","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,whE;;;;;;;;;;;;;;;;;;;;;;;ACA6C;AACE;AACN;AACM;AACF;AACN;AAC+C;AActF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAZ1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,oEAAkB;gBAClB,gEAAc;gBACd,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAC,CAAC,CAAC;gBACxD,iEAAe;aAChB;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACpB3B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;ACAf;AACA;AACH;AACE;AACR;AAOvC;IASE,kBAAoB,IAAgB,EAAU,OAAgB,EAAS,eAAgC;QAAnF,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAS;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAEzG,2BAAQ,GAAR;QAAA,iBAIC;QAHC,UAAU,CAAC;YACP,KAAI,CAAC,UAAU,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,CAAC;IAED,6BAAU,GAAV;QAAA,iBAaC;QAZG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAY,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,0DAAY,CAAC,IAAI,CAAC,EAAE,EAC5D,EAAC,OAAO,EAAE,EAAE,aAAa,EAAE,YAAU,0DAAY,CAAC,KAAO,EAAC,EAAC,CAAC,CAAC,SAAS,CACtE,UAAC,GAAG;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACxB,2DAA2D;QAC9D,CAAC,EACD,UAAC,KAAK;YACF,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CACJ,CAAC;IACN,CAAC;IAEK,+BAAY,GAAlB,UAAmB,GAAG;;;;;4BACJ,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,IAAI;yBACjB,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACnB;;gBA7BuB,+DAAU;gBAAmB,sDAAO;gBAA0B,8DAAe;;IAT5F,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oIAA6B;;SAE9B,CAAC;+EAU0B,+DAAU,EAAmB,sDAAO,EAA0B,8DAAe;OAT5F,QAAQ,CAwCpB;IAAD,eAAC;CAAA;AAxCoB","file":"tab2-tab2-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      My Profile\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n<!--      <ion-card-subtitle>Get Started</ion-card-subtitle>-->\\r\\n      <ion-card-title>Personal Information</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content *ngIf=\\\"user\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Full Name\\\" [(ngModel)]=\\\"user.name\\\" #name>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\" disabled=\\\"true\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Mobile\\\" [(ngModel)]=\\\"user.rider.mobile\\\" #mobile>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.id\\\" #password>\\r\\n      </mat-form-field>\\r\\n      <button mat-raised-button class=\\\"blue-button\\\">Save</button>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>Payment Info</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content *ngIf=\\\"user\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Bank Name\\\" [(ngModel)]=\\\"user.rider.bank\\\" #bank>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"IBAN\\\" [(ngModel)]=\\\"user.rider.iban\\\" #iban>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Swift\\\" [(ngModel)]=\\\"user.rider.swift\\\" #swift>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <button mat-raised-button class=\\\"blue-button\\\">Save</button>\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab2Page } from './tab2.page';\r\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterModule.forChild([{path: '', component: Tab2Page}]),\r\n    MatButtonModule\r\n  ],\r\n  declarations: [Tab2Page]\r\n})\r\nexport class Tab2PageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConstants} from '../AppConstants';\r\nimport {ToastController} from '@ionic/angular';\r\nimport {Storage} from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss']\r\n})\r\nexport class Tab2Page implements OnInit {\r\n    fullName: any;\r\n    email: any;\r\n    phone: any;\r\n    pass: any;\r\n    bankName: any;\r\n    ibanInfo: any;\r\n    swiftId: any;\r\n    user;\r\n  constructor(private http: HttpClient, private storage: Storage, public toastController: ToastController) {}\r\n\r\n    ngOnInit(): void {\r\n      setTimeout(() => {\r\n          this.getProfile();\r\n    }, 1000);\r\n    }\r\n\r\n    getProfile() {\r\n        this.http.get(AppConstants.API.USER + '/' + AppConstants.user.id,\r\n            {headers: { Authorization: `Bearer ${AppConstants.token}`}}).subscribe(\r\n            (res) => {\r\n                this.user = JSON.parse(JSON.stringify(res));\r\n                this.storage.set('user', this.user);\r\n                console.log(this.user);\r\n               // this.presentToast('Your profile updated successfully!');\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    async presentToast(msg) {\r\n        const toast = await this.toastController.create({\r\n            message: msg,\r\n            duration: 2000\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}